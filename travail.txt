Phase de Réflexion:
	Penser à vérifier les champs de saisies
	Faire un drag and drop pour ordonner les valeurs

Répartition des tâches:
	- Léopold fais le maquetage
	- Léopold s'occupe du front et de la récupération des données en PHP (saisie, mauvaise saisie)
	- Victor fais la connection à la base de donnée, les requêtes ainsi la génération des .sql et des .csv (peut-être laisse léopold faire ça)


Maquetage du site:
	4 pages html 
		- index.html: Permet de saisir le nom du modèle, le nom du fichier, le type de fichiers, le nombre de ligne à générer, le nombre de type de 			  champs.
					  Clique sur un bouton Next qui permet de générer de la donnée et renvoie sur la page generate.html

		- generate.html: Contient un tableau avec chaques types de variable sélectionnée plutôt:
							Chaque type aura une colonne avec nom de champs(nom de la table sql)
								*bool, int, double, double float: valeur_min, valeur_max
								*date, date_time, time: val_min_date, val_max_date
								*char, varchar: va piocher du texte dans un fichier .txt
							Possibilité de bouger chaque Int avec un drag and drop pour les positionner
							Afficher le résultat dans une petite console en dessous.
							Proposer de télécharger le fichier.
							Envoyer le modèle dans la bdd si sauvegarde ok

		- replay.html: Contient la liste des modèles présentes dans la bdd
					   Choix du fichier de téléchargement, renommer le fichier de sortie 
					   Possibilité de remodifier les valeurs en renvoyant le modèle dans generate.html => button Modifier valeur
					   Possibilité de remodifier les types en renvoyant le modèle dans index.html => button Modifier type 

		- back.html: Permet de cacher ou supprimer un champ dans un modèle (Le champ ne peut plus apparaître dans le modèle)

--------------------------------------------------------------------------------


Refonte du site:
	index.html: Placer le fromat et le sauvegarder à la page generate.html
				Générer devient Suivant

	generate.html: Name: TEST -> Nom fichier page index.html -> nom
				   TITLE -> Nom du modèle
				   Sauvegarder: bouton

	replay.html: Enlever le generate, Rename Modèle		 

--------------------------------------------------------------------------------

Mémo Base de donnée:
	La base de donnée hébergé est différente de ce qu'il faut générer. Dans la base, il y a les titres à générer.

Travail PHP, décomposition des trucs à faire:
	
	Récupérer les valeurs de la page index.php, vérifier les saisies, et les transformer en un tableau associatif.
	Envoyer ses valeurs vers la page generate.php, 
	Regarder comment écrire dans un fichier du sql et du csv
	Faire les requeste avec la base de donnée (ajouter et récupérer un modèle)

--------------------------------------------------------------------------------

Ordre du travail à faire:

	Étape 1
	-Rendre la page replay.php fonctionnel comme ça on one shot le reste.
		* Rendre la page responsive -> OK
		* Mettre un checkbox pour ensuite envoyé une requete vers index ou generate ne pas activer le bouton si une checkbox n'est pas coché -> OK
		* Enlever le renommer fichier, rajouter un compteur de champs à côté du nom du modèle -> OK
		* Remodéliser le php -> OK

	Étape 2:
	-Page index.php 
		*Soit elle est initialisé à null et donc se passe normalement -> OK
		*Soit elle récupère quelque chose par la session et du coup on prérempli les champs -> OK

	Étape 3: (DIFFICULTY *******)
	-Page generate.php
		 ( 	* INT, TINY-INT, DOUBLE: valeur_min_nb | valeur_max_nb | check Auto_increment 
		 	* Boolean: check TRUE, check FALSE, check RANDOM
		 	* VARCHAR, CHAR: longueur, select nom_fic
		 	* DATE, TIME, DATETIME: valeur_date_min, valeur_date_max (vérifier si min < max)
		 )
		 Rajouter un nom de table, urgent sinon cela ne marche pas on ne peut pas inserer

	Pour rendre le libelle unique: mettre un "autoIncr_nomModele"
	Pour les booleans mettre des 0 = faux, 1 = vrai, 2 = random
	INDEX.php => Rajouter un morceau de code pour nomModlee et nom de la table

	$_SESSION = array();
	session_destroy();
	unset($_SESSION);

--------------------------------------------------------------------------------

*Refaire la base de donnée et (MCD + Justification) et mettre de nouvelle entré pour 1_modVictor
*Rajouter le modele et le nombre de champs dans index.php OK
*Rajouter la date de création dans replay.pph OK
*Séparer les char et les varchar OK
Créer une class virtuelle contentant le nom
Pas besoin de faire d'auto incrémentation


Pourquoi avoir changer le MCD de la base de donnée:
	
	Modification: 
		table modèle: nom_fichier transformé en cheminFichier (stockage du fichier à télécharger)

	Suppression:
		table champ: fichier dégage car ne sert à rien

	Ajout:
		table champ: Changement du date en datetime pour val_min_date et val_max_date

----------------------------------------------------------------------------------

Penser à faire une fonction qui quand on clique sur un bouton permet de garder les données affichés à l'écran

Pour chaque champ, faire une fonction dans chaque classe et on appelle cette fonction qui retourne un message ou bien false et si c'est false on update la valeur.
=>Peut être faire un isset du bouton et de rappeler les fonctions de initFonction? attention les valeurs pas bonnes doivent rester (meme si je pense que c'est bon).
Rajouter des names à chaque champ sinon c'est impossible de récupérer la valeur

----------------------------------------------------------------------------------

Problème:
	- Problème de header qui s'envoie avant
	- SESSION qui désérialise mal, ne trouve plus la classe associé
	- libelle impossible à gérer > 10 -> J'ai Réussi héhéhhé
	- Vérification sur les autres navigateur (chrome ne marche pas)

A faire:
	- Générer un fichier avec des données OK fait
	- Proposer un téléchargement
